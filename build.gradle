plugins {
    id 'scala'
    id 'maven-publish'
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation gradleApi()
    //for programmatically testing gradle plugins
    //see https://docs.gradle.org/nightly/userguide/test_kit.html
    testImplementation gradleTestKit()

    implementation "org.scala-lang:scala-library:$scalaFullVersion"

    // scalikejdbc
    implementation "org.scalikejdbc:scalikejdbc_$scalaVersion:$scalikejdbcVersion"
    implementation "org.scalikejdbc:scalikejdbc-config_$scalaVersion:$scalikejdbcVersion"
    implementation "org.scalikejdbc:scalikejdbc-mapper-generator-core_$scalaVersion:$scalikejdbcVersion"
    runtimeOnly "ch.qos.logback:logback-classic:$logbackVersion"
    testImplementation "org.scalikejdbc:scalikejdbc-test_$scalaVersion:$scalikejdbcVersion"
    testImplementation "org.scalatest:scalatest_$scalaVersion:$scalatestVersion"
    testImplementation "org.scalactic:scalactic_$scalaVersion:$scalatestVersion"
    testImplementation "org.scalatestplus:junit-4-13_$scalaVersion:$scalatestJunitVersion"
    testImplementation "org.scalacheck:scalacheck_$scalaVersion:$scalacheckVersion"

    testImplementation "junit:junit:$junitVersion"

    testImplementation "com.h2database:h2:$h2Version"

}

tasks.withType(ScalaCompile) {
    scalaCompileOptions.additionalParameters = ["-feature", "-Xlint", "-language:_", "-deprecation", "-unchecked"]
}

test {
    exclude '**/*$*'
    testLogging { exceptionFormat "full" }
}

publishing {
    publications {
        maven(MavenPublication) {
            group = 'org.grimrose.gradle'
            version = "$baseVersion" + (snapshotVersion ? "-SNAPSHOT" : "")

            from components.java
        }
    }
}
